<template>
  <div>
    <v-card>
      <v-card-text>
        <v-layout row wrap>
          <v-flex xs12>
            <div id="chart1" style="margin-top:0"></div>
          </v-flex>
        </v-layout>
      </v-card-text>
    </v-card>
  </div>
</template>

<script>
  export default {
    data() {
      return {

      }
    },
    mounted() {
      this.initChart()
    },
    methods: {
      initChart() {
        $(document).ready(function () {
          window.Highcharts.setOptions({
            global: {
              useUTC: false
            }
          });

          window.Highcharts.chart('chart1', {
            chart: {
              type: 'spline',
              animation: window.Highcharts.svg, // don't animate in old IE
              marginRight: 10,
              events: {
                load: function () {
                  // set up the updating of the chart each second
                  var series = this.series[0];
                  var series2 = this.series[1];
                  var series3 = this.series[2];
                  setInterval(function () {
                    var x = new Date().getTime(); // current time
                    var y = Math.random();
                    series.addPoint([x, y], true, true);
                    x = new Date().getTime(); // current time
                    y = Math.random();
                    series2.addPoint([x, y], true, true);
                    x = new Date().getTime(); // current time
                    y = Math.random();
                    series3.addPoint([x, y], true, true);
                  }, 1000);
                }
              }
            },
            title: {
              text: 'Monitoring Daya Aktif'
            },
            xAxis: {
              type: 'datetime',
              tickPixelInterval: 150
            },
            yAxis: {
              title: {
                text: 'Kw'
              },
              plotLines: [
                {
                  value: 0,
                  width: 1,
                  color: '#808080'
                }
              ]
            },
            tooltip: {
              formatter: function () {
                return (
                  '<b>' +
                  this.series.name +
                  '</b><br/>' +
                  window.Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', this.x) +
                  '<br/>' +
                  window.Highcharts.numberFormat(this.y, 2)
                );
              }
            },
            legend: {
              enabled: true
            },
            exporting: {
              enabled: true
            },
            series: [
              {
                name: 'Beban 1',
                data: (function () {
                  // generate an array of random data
                  var data = [];
                  var time = new Date().getTime();
                  var i;

                  for (i = -19; i <= 0; i += 1) {
                    data.push({
                      x: time + i * 1000,
                      y: Math.random()
                    });
                  }
                  return data;
                })()
              },
              {
                name: 'Beban 2',
                data: (function () {
                  // generate an array of random data
                  var data = [];
                  var time = new Date().getTime();
                  var i;

                  for (i = -19; i <= 0; i += 1) {
                    data.push({
                      x: time + i * 1000,
                      y: Math.random()
                    });
                  }
                  return data;
                })()
              },
              {
                name: 'Beban 3',
                data: (function () {
                  // generate an array of random data
                  var data = [];
                  var time = new Date().getTime();
                  var i;

                  for (i = -19; i <= 0; i += 1) {
                    data.push({
                      x: time + i * 1000,
                      y: Math.random()
                    });
                  }
                  return data;
                })()
              }
            ]
          });
        });
      },
      initGauge1() {
        const thisVue = this
        const Highcharts = window.Highcharts
        var datak = {
          title: 'Beban 1',
          rangeMin: 0,
          rangeMax: 500,
          unit: 'watt'
        }
        var valUnit = 100
        // var gauge1 =
        Highcharts.chart(
          thisVue.containerID,
          {
            chart: {
              type: 'gauge',
              plotBackgroundColor: null,
              plotBackgroundImage: null,
              plotBorderWidth: 0,
              plotShadow: false,
              events: {
                load: function () {
                  // var thisHighchart = this;
                }
              }
            },

            title: {
              text: datak.title
            },

            pane: {
              startAngle: -150,
              endAngle: 150,
              background: [
                {
                  backgroundColor: {
                    linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
                    stops: [[0, '#FFF'], [1, '#333']]
                  },
                  borderWidth: 0,
                  outerRadius: '109%'
                },
                {
                  backgroundColor: {
                    linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
                    stops: [[0, '#333'], [1, '#FFF']]
                  },
                  borderWidth: 1,
                  outerRadius: '107%'
                },
                {
                  // default background
                },
                {
                  backgroundColor: '#DDD',
                  borderWidth: 0,
                  outerRadius: '105%',
                  innerRadius: '103%'
                }
              ]
            },
            // the value axis
            yAxis: {
              min: datak.rangeMin,
              max: datak.rangeMax,

              minorTickInterval: 'auto',
              minorTickWidth: 1,
              minorTickLength: 10,
              minorTickPosition: 'inside',
              minorTickColor: '#666',

              tickPixelInterval: 30,
              tickWidth: 2,
              tickPosition: 'inside',
              tickLength: 10,
              tickColor: '#666',
              labels: {
                step: 2,
                rotation: 'auto'
              },
              title: {
                text: datak.unit
              }
            },

            series: [
              {
                name: datak.unit,
                data: [valUnit],
                tooltip: {
                  valueSuffix: datak.unit
                }
              }
            ]
          },
          function (chart) {
            if (!chart.renderer.forExport) {
              $(document).on(
                'updatedValueGauge1_' + thisVue.containerID,
                function (e, arg1, arg2) {
                  var point = widgetVar.series[0].points[0];
                  var valTemp;
                  if (arg1.toString().indexOf('.') === -1) {
                    valTemp = parseInt(arg1);
                  } else {
                    valTemp = parseFloat(arg1);
                  }
                  point.update(valTemp);
                }
              );
            }
          }
        );
      }
    }
  }
</script>
